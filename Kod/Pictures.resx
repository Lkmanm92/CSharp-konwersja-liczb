<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>